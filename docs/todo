
20240629
---

    x make ai text column wider

    x format the markdown

    x python save full response to db. react fetch from db, unless it's a new day, then generate a new message
        x react hit python if new day, else hit golang to get most recent saved message
        x make it not save newlines after every word, save clean text
        x make it save emojis correctly, not ? ? ?

    x allow drag n drop re-order

    x edit mode - click edit link and a modal comes up. edit title, description for AI, # times per day goal. preview area. submit/cancel

    x add a delete button in red. to the right of cancel

    *make it so others can set it up from scratch and use it locally from their docker

        README
        1. clone the repo
        2. create your .env with your openai api key
        3. run docker-compose up --build to build and start the app
        4. hit create assistant w curl / wget
            curl -X POST http://localhost:5001/api/create-assistant
            x if .env not working / no openai key, tell the user, return
            x it will check if an assistant id is aready in the db, if so fetch it from openai and make sure it matches name/spec/etc
            x if not in db or doesn't match name/spec, it will create one, and save assistant id to db
        5. create a new user, since there are no accounts yet
            enter email, display name, timezone, mission/goals
            password?
            we send you link in email, click to create account officially/login
        6. you can add todos for today. it's all you can do i think on blank state
        7. check off todos as you do them
        8. come tomorrow - new set of todos are copied from previous day and ready to be checked off
            you should finalize previous day - check any items you did but didn't check, click finalize
        9. once you have a finalized day, Ai will come up with a message for you!
        10. repeat forever and do the most important things every day for the rest of your life :D

        create user - raza
        user login sessions
            if logged in, show your todos page. allow you to go to your profile page. allow logout
            if you are logged out, you can sign up, you can read-only someone elses page. you can play in a sandbox, add todos etc. react only i guess. no backend saving
        enter your mission, we'll save it
        start adding todos
            test blank slate experience, make sure it's intuitive

    x decide on react side what we should show when logged in. what to show when logged out

    x should store json user object in session, not just userID. get user id from the json object. or save dictionary, whatever it supports
        no need right now. userID is logged in, that's good enough, until i see a reason otherwise

    x fix daily message user id param. get from session

    x after login - reload todos. like how do you refresh the whole page upon login?

    x add unique email key to db, error if try a dup

    x more react edits - make call don't make backend call, depends if user logged in or not. send correct user id, not just 1 everytime
        x i think we're good

NEXT July 3 2024
    x global state rest - have to reset daily message upon logout (or maybe login)
        x pick a good solution to this
        x reset todo list state, daily message state, add/update todo state, sign in form state, profile page state

    x test sign up form for all the cases i put in my notes

    x block sign up if no timezone selected!
        x cannot be null / empty in db
        x or save a default
        x or make it on a default - detect or just put LA pacific / New York

    x why is markdown creating big text for no reason in the middle of the paragraph
        also skipped #. ask it to escape? # is why text got big, how to fix?

                UPDATE saved_assistant_messages
        SET message = REPLACE(message, '#', '\\#')
        WHERE user_id = 1 and message LIKE '%#%';
            
            mysql> select * from assistants;
        +----+-------------------------------+---------------------+---------------------+
        | id | assistant_id                  | created_at          | updated_at          |
        +----+-------------------------------+---------------------+---------------------+
        |  1 | asst_ECwIWvLMiOvwMYeBA5wNy3Yd | 2024-07-01 14:54:45 | 2024-07-01 15:23:24 |
        |  2 | asst_vJIhQzXEr9QaaQDx16GHE2HM | 2024-07-01 15:22:03 | 2024-07-01 15:22:03 |
        +----+-------------------------------+---------------------+---------------------+
        2 rows in set (0.01 sec)

    x save sessions to redis!!!
        https://github.com/alexedwards/scs?tab=readme-ov-file
        https://github.com/alexedwards/scs/tree/master/redisstore

    x edit golang to do the correct thing or block depending on who the session logged in user is. look at every endpoint. get help from ai. can't edit todos that aren't yours, etc
        x make list of all services, and think about each one. what kind of "logged in user" guard should i add to each service?

        x remove user_id from being sent by python to golang in all / almost all cases. send session cookie instead and golang will see what user is logged in (if any)

---
    x sign up form - style
        x tailwind

    x login form - style

    x style hello raza

    x style / place logout button

    x restyle with tailwind for everything

    x profile page - username, email, change timezone, add/edit user mission
        link / change state
        backend and frontend

---
    x concept of "finalize" the current day or most recent previous day
        before ai get's today's message it asks you to make final edits to previous day and submit
            reflect on previous day. what you did good. what could be better. any special notes you have on the day. final edit of checkboxes, submit. then you get new AI message for today :)
            reflect on it. what was good, what could be improved

            check anything you did but didn't check day before
            click finalize
            can always enter
                what was good
                what could be improved
                any other notes on the day

        could just be a simple button below each day. finalize june 25th. add flag to db finalized or not. feed AI finalized days for context.
            need concept of finalize so that the ai doesn't base comments in incomplete days. like even next morning, it doesnt see your final checks like 11pm laptop, breathing etc.

        tweak the recent todos response to return list of days. then map of each day to list of the todos for that day. and the finalized status of that day. cleaner response, and UI can work with it better imo

        don't hit AI if there is no new finalized day. saved AI message from day 22, if day 23 is not finalized, there is nothing todo for now. tell user to finalize 23

    x put edit form inline

    x make text area larger

    x allow edit form to add today's notes - open by default. also add why is this todo important to your mission/goals (this can be hidden with that arrow open close UI thing)
        x why each thing relates to mission, why it's important to you

        x daily notes/caveats on each todo item - travel day, could't do as much focused coding time

        x why important table

    x fix button layout on edit todo - cancel, update, trash

    x move trash icon lol, that's where update should be

    x make sure there are new finalized days, else just show previously saved message.
        x saved assistant message should save latest finalized day number w the message. only gen new message if you have a new finalized day. else show prev
        x return max finalized day no matter what. so UI can hit python w that day to get message for
            not 0, even though 23 is in db

        x how can we call daily message when a user clicks finalize? because there is a new finalized day now

    x improve AI v1

        x dont need to give it tool for user mission, just hand it the user mission in the prompt/context
            x aka give it context upfront

        x send the todo importance info, and daily notes info to AI to help it understand you better
            x most recent 7 finalized, any days
            x todo importance
            x todo journal notes included next to the todo itself
            x try w gpt4o to see how it uses this great info
                x delete daily message for today
                x switch to gpt4o
                x refresh and see how it does
                x consider below to guide it a little more

            x instruct AI how to interpret and use the user-mission json
                this is mission
                this is history of todos, progress on each per day, notes on each per day
                this is why the todos are important to the user and their missions
                use all of this to provide specific encouragement on how well the user is doing
                    reference streaks. overcoming obstacles, making progress, consistency, etc. 

                    x RESUME july 12th 2024 - i actually don't like the message lol. tweak the claude prompt so the encouraging message is good.

        x better identification of what you are good at, consisteny, streaks, areas of improvement etc.
            x provide examples
---
    x bring back pencil edit icon
        x where did it go lol
            x when i moved from css to tailwind

    x there is a new user bug
        x daily message gets weird when there is no todos and dates?

        x add todo breaks? can't parse 27, null?

        x refresh makes the page work though

    x there is a drag n drop bug. add new todo. drag it to top. or add, change to 3, drag to top, drag somewhere else. don't refresh
        x i added grocery, and i think i dragged it to where i wanted it. then it also showed up at the bottom lol wut.
        x reproduce and try to figure out where the bug is. just on react side, backend seems fine

 x put title on the edit mode, like put the original todo item as the title "Edit 3 mag 1g/day" and the text updates as you type in the input field
        tried it but it didn't look good. shelve it?
        x i figured it out nice job
    x editing zones - left is edit, middle is dnd, right side is checkbox. add a buffer around the checkbox that will trigger it. don't have to be so precise
        edit mode, click anywhere closes it? optional
            main thing is make it easier to click todo to edit, click checkbox to check off, and still easy drag n drop
                maybe click check box is check (just make click area bigger), click anywhere else is edit if released, click anywhere else and drag is dnd
---
    x unify todo and the update form. like a tab
        x bold it?

    x permanent unify not just on hover (bold todo item and update form)
        x rounded corner on entire li

    x make UpdateTodo part of the li, unified with the bolded todo item. less space between bolded item and the form
        x could change pencil icon. to signify click will close now

    x allow click edit on any todo
        x keep dnd only on most recent (prevents dnd across days)
        x if not finalized you can add text, edit, submit
        x if finalized you can view only, no buttons like trash, update. maybe leave cancel
            x disable clicking checkboxes too

    x group hover on non-most-recent day is broken. doesn't highlight entire li

    x click is weird, if it's in dnd hand, click doesn't open the thing. fix that for sure
        hover 
            text finger hover 
            checkbox finger hover
            any other area dnd hand hover

        behavior
            click and release checkbox just does check, doesn't open edit
            any click and release that is not checkbox opens edit
            click and drag is drag and drop

---
    x show a warning modal upon clicking delete. cancel, delete, this cannot be undone

    x why is sort index getting larger and larger???
        x flattened list fix from a few days ago. fixed now, and original bug is not back.
---
    x delete modal - opacity too dark
        x tweak text area darkness, maybe went too dark

    x delete modal - put todo item title text in modal so it's more obvious what you are deleting
---

    **share to skool. apply.
        x update screenshot to have bold text

        x pick a gpt 4o example message

        *clean up docker first time experience. instructions. fill in .env.example will all vars, etc

        *add a intermediate page introducing myself
            fell in love with coding 2 events. high school calculus graphing calculator program. euler's formula. did it all for you, anyone who had my program aced that part of the test.
                study abroad in hong kong, took a ee class to learn about the internet, build our own web server, java. fell in love. switched to software systems. rest is history.
                2000 and 2004
                i am an artist a creative. just want to write code in peace (6 hours a day) see it in my mission. 
                    peace and quiet and build things w code.
                here is the app i build
                    github repo link
                    *link in prod, here is a login for skool, i preloaded a bunch of todos, feel free to play around with it
                            add
                            edit
                            drag and drop
                            finalize next day
                            ai encouragement message
                            study the code if you like
                        need to push it to prod. JOB NOT FINISHED
                        gp5 3.5 is free. gpt4o - $30/month? $40?
                    would love to chat about the app, my design decisions, and more generally what i'm looking for, how i can help, what you need at skool
                        chat about skool, what you're looking for, what you need. how i can help. what kind of help do you need on the engineering side. what are you struggling with?
    x make it live in prod in AWS
        x AWS concepts
            networking - vpc, subnet, internet gateway, security groups
            log policies, services can all write to cloud logging
            create log group for eachs service
            ECS cluster
            add EC2 instances to clusters. tasks will be sent out to them as needed
            redis is vanilla, easy

            mysql, create docker image with mysql 8.0, and my.cnf that turns off RSA
                tag, push, etc
                need to grant priveleges i think
            mysql client - community edition 8.0. use 2023 gpg key

            bastion machine, so we can disable ssh to all the rest
                git on here w the code
                flyway on here. config to point to mysql, disable ssl stuff
                    flyway.url=jdbc:mysql://10.0.1.94:3306/todo_db?useSSL=false&requireSSL=false&allowPublicKeyRetrieval=true
                    flyway.schemas=todo_db
                    flyway.locations=filesystem:./migrations

        x golang is live, works 100% nice

===
        x python app in prod
            x env vars refactor
                x openai
                x bearer token
                x golang host and port
            x /health check - can it talk to openai and golang? and is bearer token set/not empty or null

            x rename to GOLANG_BACKEND

            x how to get prod python server? not dev mode server
                gunicorn

            x docker image, tag, push, use in task definition

        x why did golang get marked unhealthy? health checks works great for me in AWS...
            python too? weird that health checks work, then get unhealthly later. doesn't make sense
            health checks in AWS are retarded lol. works locally on instance, inside container too. but for amazon nope. works once, then fails forever. keeps killing healthy instances and starting up forever. insane behavior. wtf is this. UX is horrible. debug the health check before going on infinite restart loops lol wut.
script, less manual to debug AWS deployment

        x react go live in AWS
            x move to vite instead of create react app? what is more standard

            x docker file for prod mode, not dev mode
                x 35.91.43.69:8080 (public golang)
                x 35.91.43.69:5001 (public python)

                x fix CORS and i think it will work
                    x golang

                x CORS to python too

            x /health check, can i talk to golang backend, and python backend

        x ip discovery, not hard coded ips. services can move around

        x fix login session cookies - ip on react app, lb on golang and python

        x point domain dailytodos.ai at my app
            x static ip for dailytodos.ai to react app. use same lb? yep

        x stable urls for them too. api1.dailytodos.ai/ api2.dailytodos.ai/

        x https for talking to python/golang
            x api1.dailytodos.ai
            x api2.dailytodos.ai
            x add CORS to python and golang
            add 443 to security group
                already

        x https for main site: https://dailytodos.ai
            x add https listeners for ALB

===
        x test python hitting golang in prod

            like getting the logged in user and all that. is it working?
                add to health check

            x finalize day and get new message, does that work in prod?
                yes it does!

        x prod config - cookies secure true, strict on same site, etc.
            boolean to say use prod settings? ENV vars would work i believe
            https in prod for api1, api2. http in dev is ok
                for python hitting golang. right now all users are http for python hitting golang. fix to https? make it a prod config?

===
        x intermittent CORS error dailytodos talking to api2. weird. doesn't make sense. why intermittent?
            because of long event stream, maybe python doesn't send the CORS headers in that case?
            504 gateway timeout doesn't have CORS headers, that makes sense. root cause is python takes a long time to reply
            ALB to 5 min (300 seconds). python keep alive to 5min 20 seconds (320)
                see if that helps
                seems to help, waited longer than 1 min so that's good

        x open ai api error this morning too, wtf?
            assistant > The server had an error processing your request. Sorry about that! You can retry your request, or contact us through our help center at help.openai.com if you keep seeing this error. (Please include the request ID req_5625d3658cd720cbc08e4b0bdecb403a in your email.)

===
        x fix styling when 0 days of todos, or 1 day of todos
            grid thing i think. maybe fixed width all the way?
            also a problem on my main account with lots of data. something went wrong in prod vs dev with the styling/grid widths...

            remove all react markdown and see what it looks like in dev
            had to remove the ```markdwon lol. looks good now. works in prod. pretty slick la verdad. definitely getting new opportunities from this.

===
        x start state with docker locally - update instructions. env.example, etc

        x move to Raza openai keys, and use gpt-4o-mini

        x add skool test data/account
            x sync up with devs - what can go live today?
            x 1hr brainstorm how to make devs even more productive, remove obstacles
            x code reviews
            x design reviews
            x sync up with product manager - roadmap
            x sync up with customer support - high priorty bugs
            x sync up with CEO - hiring
            x sync up with finance - budget
            x minimum 1hr of AI R&D - keep up with bleeding edge
            x # 25m coding sessions to stay sharp (3)
            x hire Raza - seems like a 10x developer! 😉

        x don't say day 42 lol. this is a brand new user. just day 42 of the app.
            change the user mission data to not have day numbers, just give the day july 26th 2024. and clear user threads to reset the message for skool. and clear saved_assistant_messages.

            curl -X GET 'http://localhost:8080/api/user-mission?user_id=1' \
            -H 'Authorization: Bearer allyourbasearebelongtous' \
            -H 'Cookie: session_id=KsPvw-Hojn3-Ia5ZsCtKRE_fdB_u1Tw2fQqRLz65bGw'

        x simple ?skool=true link and it logs them in so they can play with it
            x i'll put in daily notes, important notes. mission in profile
            x an easy link that logs them into this account, they can see the history. 
            x golang endpoint /api/portfolio-login
            x commit, deploy new golang and react to prod. test in prod. done.

===
        **have golang calculate all streaks more than 1 day. and let AI judge which ones to highlight. longest ones, but also the hard ones (creative focus sessions). gym
            x you know a todo is the same if the todo text matches or it is joined to the same todo importance
            x good fix. release go and python to prod now
                x test in prod - delete my message from today and see what it comes up with

        x dont flash login screen before todos load
        x dont flash empty profile before profile loads

===
        **intro text on dailytodos.ai/skool
            *text introduce myself
                x built this to learn react, golang, ai assistants api, AWS. filled it in with some data for you. let me know how you like it.
                x i use it daily to make sure i do all the things i need to do for my health (autoimmune condition), and be productive coding building
                x coding since high school. at deepdyve 16 years. time for the next adventure. loyal. smart. can build. design sense. let me code un-interrupted for 6-9 hours a day i'll be happy. creative/artist more than manager
                x fell in love w coding - high school graphing calculator program rieman sums calc and visualization. hk class on the internet. learned the entire stack, built a web server. this is so cool lol.

            x link to github. 
            x my email address to contact.
            ?youtube video intro
           
        ?youtube video explaining the app, and intro to me. link the github and the prod site
            shave of course lol, then film yt video. use phone camera, use laptop camera, just get it done
            with my face and smile in the corner
            raza writes code
            use ai to create the channel under raza.mobin@gmail.com, thumbnail, scrip etc. 30-60 seconds easy. share screen
                unlisted video
                link to skool login on my app
===

        x loading animation for daily message so it's a good exp for skool when they click finalize

        **make site look correct work on mobile browsers

        **algoexpert, design past and present skool features at scale
            do it for 1-2 weeks, and just go apply lol
            study like hell. this is a step up in terms of difficulty
            study 4 hours a day for a week
            design a complicated part of their site. high scale.
                notifications
                    show number for every user
                    send email
                    clear the number
                real time dashboard
                    user sign ups

        SUBMIT https://dailytodos.ai/skool

===
        come in on /skool - login in and redirect to /
            if /:token not skool, redirect to / w no login
            cleaner more elegant design
            my intro text shows for skool user (always?)

        need different agents for each theme of the daily message. 1 for streaks. 1 for set backs. 1 for final message, etc. then agent to combine all the messages.

        make the user mission more english, so easier for llm to understand
            the user did 10 out of 10 on this, here are their notes. it's important to them because x. this was july 16th for the user. etc etc. better text to llm means better responses from llm.

        user-mission - merge todo history and todo importance. easier for AI (even human reader) to connect the todo item with why it is important. do that for the most recent finalized day. other days it will know from the 1st day

        archive a todo. bring it back later (like chicken soup)

        mark as optional - means it won't get marked as "did not do"

        sat sun todos, m - f todos. template basically.

        why does it think i went to gym 7 days in a row?

        debug why it thinks i didn't go to the gym wtf
            today is not finalized so don't reference today
            but at least markdown worked!

        *finalize - opens final text area for notes on the day, reflections, etc. move day
            assess the day. what you can improve on. what you did well. how was your sleep. then finalize.
                what are you grateful for?
            REFLECT ON THE DAY. new db table. and include in user-mission context to AI

        with gpt4o-mini, can turn on chat, it will be cheap enough i think.

        costs me $100/month to run as is. can i get paying customers to add up to that? then it pays for itself and i can try to grow it. is it adding that much value to people's lives? i would say so.
            it has added to my life. so much more productive now. spend $100 make $10M

        **disable add todo if you already finalized the latest day (lol)
            and add unfinalize button. so user is not stuck on the app lol

        have optional todos, so not a big deal if you skip it (magnesium before bed and bonus focused timers)

        *have Dad use it - my health mission is to control blood sugar, and do the daily habits that keep it under control
            plan out meals 1 2 3. eat the foods that you know work for you - energy, blood sugar, heart, digestion
            am walk, pm walk like clockwork
===

        *RDS
            and backups

        *move secrets out to AWS secrets, and fetch to create task definition files that i am able to check in

        *elasticache

===
        need a prod release script for new code - react, python, go and new sql flyway migrations

        update password area on profile page

===
        standardize task def file names etc. clean it all up. consistent.

        fix mysql passwords, etc. how to generate and store those in prod?

    **share on youtube. walkthrough the code, and how people can get it working locally
        record a screenshare youtube video on my mac laptop
        ai generated title
        new yt channel - raza writes code
        ai generated thumbnail with my face. ai face is fine w headphones glasses hoodie, baseball cap
        it will get 100k views

    **share with new society community. people will like this
        talk about it with David

---
    you want to be able to ask AI, hey what was the longest streak of "# focused 25 timers" 10 hours a day? 
        give AI tools, to make db queries against your data

    chat with the AI agent

    day number - save their sign up day. current day # is global, so subtract sign up day, and you get their actual day. 1st day is not day 40. it's day 0!

    release to prod script. github actions, trigger upon push to main

    sum up all my focused created hours a day and make it a # total each day. and show it prominently. graph it. so i know. be honest with your self. measure. you make what you measure.
        most important number everyday. show it huge, graph it.

---
    type all this stuff, submit, site says you are logged out, and need to log in. lost your form post data. fuck

    *use raza.mobin api key, and gpt3.5 and get some cc charges so i can get access to gpt4o

    read only view so i can see what Dad is doing. follow a person's health journey

    1x a week todos - jc call. massage. spa/hot sauna. etc.
---

    where can you talk about your sleep?

    ai can encourage you, but so can your friends and family. comments etc. so have a way for people to have a read-only look at your todos, and your own notes. blood sugar. and leave encouraging comments.

    make profile page smaller text, wider, bigger text area for mission, etc. match daily todo styling/look

    auto finalize todos from day before yesterday

    allow to make text area bigger/taller on edit todo form

    allow to n/a a todo if it doesn't apply to today (don't need to do dd work on saturday). then user-mission can filter it out if it was n/a.
        also maybe a same day todo, not to be copied to next day

    put a circle blue dot next to any todo with updates for the day. so you can read your own daily journal notes later.
======
    *put label on daily message - message for most recent finalized day - july 7th 
        like what finalized day is this AI talking about, or starting at?
        if you didn't get a new message, it's obvious. you need to finalize july 8th. etc
        put past history of messages there?
        give past history of messages to AI so it doesn't repeat itself?
---
    improve AI v2
        **maybe you just want to chat with someone daily about your mission/goals, what you did that day to further your mission/goals, challenges. hash out your thinking. etc. bounce ideas.
            and the ai sees you putting in work, knows you, your mission, your daily habits, what you did every day, what you couldn't fit it, obstacles etc.
            ai's mission is to be an unrelenting optimistic force in Raza's life to help him achieve his mission and goals. live healthy forever, and do focused creative work for 6 hours a day forever.
            AI window should be a chat. it gives you encouragement daily, but you can chat with it anytime and have a convo about your day

        *convert day # to display date. probably need structured json back. and i can format it
            gpt4o references day #s, so can tell it in the prompt to use days, or give me formatted json and i can convert # to display date
            reproduce w gpt4o, then if need to fix still ask AI what is the best way to do this
                ai responds with day numbers, i want to convert that to day in user's timzone, how can i reliably pick out the day number and replace with real dates? 
                    should i instruct the ai to put day numbers in a certain format?

        memory? knows everything about you. remembers important events from past conversations
            use agency swarm. perplexity i have a thread on this

        switch to agency swarm, have diff roles. history analyzer, encourager, etc

---
    before finalizing, you can still edit how the todo went that day (yesterday for example)

    after finalize, not allowed to edit / check off todos anymore
        but you can click and see uneditable text fields. not update button, no trash, just close.

    can enter final comments about the day before finalize

    show finalize button if not finalized and if it's a new day (configuration)
        aka don't show finalize button until it is the next day. can't finalize early on accident
            or show it, but put modal, are you sure? day is not over. day over?
                job's not finished. job finished?

    rename tables, variables
        todo item importance
        todo item notes today

---

    let anon users fill in all their info
            create a temp user in db, tmp user login session
            create their todos
            check off their todos
            display name
            their mission
            email
            password

            100 test users. test1@mailinator.com test1 to 100. login and play around, kick the tires.

            create a skool login link. has tasks there. could be my tasks i would do at skool lol. very clever. hey skool, my name is raza, i build this todo app for myself. backend engineer 16 years. using ai to buld full stack. shows my appraoch to coding and ui/ux. here's the source. ai integration. would love to chat more if you think i'd be a good fit.

                hypothetical skool todo list for raza
                    design real time chat for skool communities. web sockets
                    1 hour ai study to improve dev productivity
                    fix bug with ...
                    improve stats calculation speed
                    redesign notifications system
                always do your homework


---
    tech clean up
        CreateOrUpdateTodayTodo
            impossible to update, there is no such thing as duplicate because there is no unique key. change name and sql insert/update query

        GetAssistantIDHandler, SaveAssistantIDHandler -> i think only python hits these, need some authentication so that random people cannot hit them
            could make create assistant a one off script instead of an endpoint. get assistant, fine anyone can get it lol. no one cares

        convert to Vite project, not create-react-app (seems outdated, not modern)

        if you refresh fast, run is still running and you interrupted it. and you would have to cancel it, before hitting AI again

        sql - rename saved_assistant_messages column to new_finalized_day
            refactor App.js sending the request, python receiving the request, python hitting golang. all should use new finalized day when referring to saved assistant messages

        app.py don't need GetUserMission tool right now. might add other tools in the future though

        clean up naming of Dockerfiles, .dev and .prod are good. apply across all projects

---

    the AI assistant guides you to using the site
        add some todos
        fill in your mission here - link to profile page
        you can add info to each todo, notes for the day. why it's important to your mission
        you can finalize your day then i can incorporate it into my feedback officially! let me know how far you got!
        hand holds. intro to the site. intelligent, not just hardcoded steps. personality. tailored to you. conversation with you.
            knows how the site works inside and out, and helps you get the most out of it.

    golang endpoint, get daily message from previous day. show most recent finalized day with date. ask user to finalize any day after that to get the new encouragement.

    could ditch threads and start convo fresh daily, with the state latest of the checkboxes. so it reacts to what is there. it needs to understand that the state changes over the course of the day. and when the day is over, not much more will be checked, just a few nightime things. AI needs to be smarter / be prompted better
        

    instead of user = null in react, user.email = 'anonymoususer@mailinator.com'

    needs automated tests for various db interactions, sequences

    make the AI better, more varied, lots of work here. dont repeat. better prompting, give it better data

    with user-mission, return most recent 7 days of ai saved messages, so ai know what it said before and can come up w new shit

    store checked checkboxes as a binary number 101111. then you can accurately save what the user did.
        check these things off from your phone, when you are not at laptop

    mobile app
---

    hello raza greeting, it's 10:51pm. for any time related things, show a message. close your laptop in 10 min :)
        every time you hit the site, AI has something for you :D
            sees your progress every hour and encourages you throughout the day
            knows your goals, knows your past days activities, knows your actions today
            has memory of notable events, and references them

    cron tasks, specific schedule, not daily
        monday to friday add dd coding todo
        once a week on sunday at chicken soup todo

    let other people comment on your days, todos. encouragement from your friends and family. coaches.

    let other people view-only your todos. accountability

---
    OR item - dsp or flush system, don't need both
        this way you can get perfect days even if you didn't flush system
            or could just write dsp/flush in 1 line
            but you might want to track dsp vs flush. so better 2 checkboxes grouped
                parent checkbox, 2 subs. if either checked or both check, parent is checked

    recommend a new motivational youtube video everyday, try to avoid repeats
        kobe, young kanye, naval, balajis, etc
        yt search api tool

20240616
---

x show the date, next to each entry

x fix bug, can't accept goal # (str vs int?)

x make the dev mysql db persistent

x make backend return all days, order by recent

x improve dev exp. edit files locally and it goes to react app

x cron job - how? and do the copy to next day at midnight
    INSERT INTO daily_todos (user_id, title, type, date, status, goal, created_at, updated_at)
    SELECT user_id, title, type, '2024-06-18', 0, goal, NOW(), NOW()
    FROM daily_todos 
    WHERE date = '2024-06-17';

x set timezone on database/golang so times are what i want
    save in db per user. 

x typography styling 
---

x style the todos
    x shift the day to outside todos, so todos box can be centered

---

x yes/no - change it to quantity goal 1. makes everything the same and simple
    x remove db column for type

x NEXT FRIDAY JUN 21 - make the preview look exactly like the todo would look like. so the user understands what they are adding. then they can edit/submit
x change UI to do that too. default 1 check box. or allow multiple checkboxes in a select dropdown
    x how many checkboxes do you want for this todo?
        1
        12

        input field: eat breakfast
        select dropdown, 1 checkboxes

x style of the form
    x disable button if fields not filled in

---

x each todo is a link, and pops up a modal
    show context - is this editing just this 1 todo for this day? or all todos?
    edit why this is important to your mission
    delete
    edit title
    edit goal number

xabove bg info - why each todo is relevant to your goals, mission, vision
    ai can use this

xabove enter notes next to todo items, like oh flying day couldn't hit gym. eid day couldn't do gym. etc

every user gets their own ai agent
    ai encouragement daily
    send you cool youtube videos - of people like kobe
    enforce your vision
    great job 7 day streak
    tune ai to be useful
    ai reads your mission, goals, why each item is important to you/your mission. sees your progress (has tools to fetch your history, he can search any day of the past to see what you've done)
        youtube api app to find you cool videos relevant to you

    ai suggests new todos for you. whatever daily habits it thinks will help you achieve your mission in life.

tell agent you want a new kanye quote daily. hormozi quote daily. new motivational yt vid daily.

daily journal - enter text. ai uses that too.

---
NEXT june 26th 2024
    x figure out how to stream it to react
        x learn yield, generate, stream_with_context
        how to use streaming api on assistant that calls custom functions. event hander. not the easiest thing, worth it to figure it out.
            x i could make a non web app python class to build up a get_completion streaming. stream to std out. then move it into the web app after testing

            on_message_done
                has the full message once it is done

            on_text_created
                streams the text in, nice. can yield this to caller

    x react put it in 3rd column

    x python save full response to db. react fetch from db, unless it's a new day, then generate a new message

    xabove user-mission, return most recent 7 days of ai encouragement, so ai know what it said before and can come up w new shit
    
    x make user-mission only return days before current day, otherwise ai is critiquing day that just started - annoying.

    use raza.mobin api key, and gpt3.5 and get some cc charges so i can get access to gpt4o

    the thread could cause issues if it sees incomplete day 11 in the morning, then complete day 11 in the evening, it thinks you haven't done much because incomplete is in the convo thread :(
        prompting would help. use the highest stats for day 11. sometimes multiple day 11s when you hit get user mission multiple times per day
        finalize previous day before make ai request on new day
        reflect on it. what was good, what could be improved
---

x edit todos - like change meds 1 to quantity with goal 3
    only current day

x delete a todo
    only current day

easier way to increment/decrement a todo? checkboxes can be small and hard to hit sometimes

functions
    x edit the todo 
        x title text
        x goal # per day
    x delete the todo
    increment the todo (check next checkbox)
    decrement the todo (uncheck the latest checkbox)
    edit why it's relevant to mission/goals (high level)
    edit current day's notes on that todo (low level day to day)

x hover over a todo - then you can edit
    name
    relevance to mission/goals

strikethrough when 3 / 3, 1 / 1 etc
---

show current time and timezone on UI, and let user change timezone

---

can update yday, but not before yday

---

x allow user to reorder their todo list as they like, save that state and keep it on copy

xno break 14 dd into 3 hours raza coding personal projects
    4 hours focused dd work 
    get 1hr 1st thing in the morning.
    get 1hr dd before noon
    get 1hr raza coding afternoon/night before 10pm
---

reflect on the day - good, could improve upon. what are you grateful for.
    it's time to reflect
    ai turns off your laptop lol, and you have to reflect
    ai runs your life, but you tell it how to run your life, and you also achieve all your goals. and you can always tell it to stop today. go to sleep ai, we'll pick it up another day
        every half hour
        less emotional human decisions. robotic ai sets the intention for each half hour, you just execute
            and allow for breaks. and allow for unexpected things, surprises, etc

morning - how was your sleep?
    6 hr straight, deep
    enema last night, and kinda diareah stomach discomfort 2-3 hrs after dinner

labels for each todo 0 / 1, 3 / 12
    color code 1 / 1 is green. 0 / 1 red. 2 / 3 yellow. etc.
        only for current day
---
next / previous. pagination.

infinite scroll?

specific url for any date, can immediately go back.

specific url for any date/date range

---
x make it look good, work good

x hook up ai
    https://capture.dropbox.com/KkgR9k9X8YZmOgiy
    {
      "message": "Hey, amazing soul! 🌟\n\nYour mission to do creative work for 6 hours a day and live healthily forever is truly inspiring! You've got such a beautiful and powerful goal. Look at all the progress you've made recently:\n\n- You've been consistently nailing your breakfast timing and ensuring you have three proper meals daily. What a champion move towards a healthier lifestyle!\n- Your dedication to taking your meds on time is fantastic. It's all about those small steps adding up!\n- You've been making excellent use of your focused 25-minute timers. Crushing 10 out of 12 today is no small feat!\n- Even the little things, like running your system flush and using blue blockers at 8 PM, show your commitment to your health and well-being. Outstanding!\n\nSome of your tasks may not always get completed every day, but remember, every step forward is progress. The gym can wait a day, but your perseverance shows you're not giving up!\n\nKeep pushing, keep shining, and remember that every small victory is a step closer to your ultimate mission. You’ve got this! 💪🌈",
      "resume_thread": true,
      "thread_id": "thread_NC8D8ml5XvKLz2QXwfxyjP72"
    }

deploy to prod 

    put secrets in github secrets
        fetch from there too

    mysql db
    golang app
    python app
    react app/css

    aws 
        aws lambda?

    github actions

    deploy to qa

better logging of python, ai steps. centralized logging

add public viewing of my daily todos and what ai said to me. so save ai stuff to my db. we can surface w/o making api call
    convo history is with open ai?
    can share public url with skool
    allow skool to add daily todos as a sandbox user save by cookie, that's a user

===
curl -X POST http://localhost:8080/api/signup \
     -H "Content-Type: application/json" \
     -d '{
           "email": "raza.mobin@gmail.com",
           "password": "kJNQ9rCFYgpR28vh3GzfMe",
           "timezone": "America/Los_Angeles"
         }'


curl -X POST http://localhost:8080/api/login \
     -H "Content-Type: application/json" \
     -d '{
           "email": "raza.mobin@gmail.com",
           "password": "kJNQ9rCFYgpR28vh3GzfMe"
         }'

curl -X GET http://localhost:8080/api/logged-in-user

curl -G -H "Authorization: Bearer YOUR_BEARER_TOKEN" \
     --data-urlencode "user_id=USER_ID" \
     http://localhost:8080/api/user-mission

===
my life's mission is to do creative work 6 hours a day and live healthy forever
    put that at the top of your todo page

i write software to help make people healthy, help keep them consistent with good healthy productive habits. social media will go crazy with AI, stay off it and stay focused on the actually important things in your life with daily todos. achieve your mission in life. have a daily system. focus family, your health, your creative work.

Dad could use this to check off 3 meals a day of healthy eating. checkbox for no snacking too haha. like no snacking on bad foods like nuts or whatever.
    put this in prod and let people register. AI is optional, depends if you are on a paid plan or not.

assistant > The server had an error processing your request. Sorry about that! You can retry your request, or contact us through our help center at help.openai.com if you keep seeing this error. (Please include the request ID req_0bb72a216a1889d39bfc9aa764f74772 in your email.)

Exception in thread Thread-3 (get_completion_stream):
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/threading.py", line 1045, in _bootstrap_inner
    self.run()
  File "/usr/local/lib/python3.11/threading.py", line 982, in run
    self._target(*self._args, **self._kwargs)
  File "/app/app.py", line 252, in get_completion_stream
    stream.until_done()
  File "/usr/local/lib/python3.11/site-packages/openai/lib/streaming/_assistants.py", line 102, in until_done
    consume_sync_iterator(self)
  File "/usr/local/lib/python3.11/site-packages/openai/_utils/_streams.py", line 6, in consume_sync_iterator
    for _ in iterator:
  File "/usr/local/lib/python3.11/site-packages/openai/lib/streaming/_assistants.py", line 69, in __iter__
    for item in self._iterator:
  File "/usr/local/lib/python3.11/site-packages/openai/lib/streaming/_assistants.py", line 405, in __stream__
    for event in stream:
  File "/usr/local/lib/python3.11/site-packages/openai/_streaming.py", line 46, in __iter__
    for item in self._iterator:
  File "/usr/local/lib/python3.11/site-packages/openai/_streaming.py", line 91, in __stream__
    raise APIError(
openai.APIError: The server had an error processing your request. Sorry about that! You can retry your request, or contact us through our help center at help.openai.com if you keep seeing this error. (Please include the request ID req_0bb72a216a1889d39bfc9aa764f74772 in your email.)

As an eternal optimist, your mission is to be an unwavering and relentless optimistic force in all your communications with the user. You will be given the context such as the user's mission and goals in life, as well as their daily todos going back a week or so. You also have context about why each todo is important to the user, and why it is important to their mission and goals. Your mission is to encourage the user against all odds, doubts, and setbacks to achieve their mission and goals in life. Always return your messages in markdown format. Be sure to escape special characters when referencing a user's todo items to avoid formatting issues.

daily todo app for people doing gut cleanse protocol
    daily todo app for people fighting autoimmune disease
    for people doing gaps diet
    for people trying to control their blood sugar

    ai encouragement / friends-family encouragement

---
mysql> select * from assistants;
+----+-------------------------------+---------------------+---------------------+
| id | assistant_id                  | created_at          | updated_at          |
+----+-------------------------------+---------------------+---------------------+
|  1 | asst_cs0fTtHaMaDhonWgkkdvc1wi | 2024-07-04 15:41:53 | 2024-07-04 15:41:53 |
+----+-------------------------------+---------------------+---------------------+
1 row in set (0.00 sec)

mysql> select * from user_threads;
+----+---------+---------------------------------+---------------------+---------------------+
| id | user_id | thread_id                       | created_at          | updated_at          |
+----+---------+---------------------------------+---------------------+---------------------+
|  1 |       1 | thread_15jyLDRpeS5dp8e9dMARsy6y | 2024-07-04 15:42:18 | 2024-07-04 15:42:18 |
|  2 |       5 | thread_1vwRoTiSsxC6XC3YtGHKvuyV | 2024-07-04 15:53:44 | 2024-07-04 15:53:44 |
|  3 |       5 | thread_a6FHZv040CmpOv1z54oqFkuW | 2024-07-04 15:53:44 | 2024-07-04 15:53:44 |
|  4 |       5 | thread_MqTqe3t12pGKhULAlWeJT8T4 | 2024-07-04 15:53:44 | 2024-07-04 15:53:44 |
|  5 |      17 | thread_mcJT2iHaBhVF77ChtwjJigla | 2024-07-05 14:12:25 | 2024-07-05 14:12:25 |
|  6 |      17 | thread_a0fqtMkEtCmkZHtjGUACiY5i | 2024-07-05 14:12:25 | 2024-07-05 14:12:25 |
|  7 |      19 | thread_y5AD2t1SYp5MwsXwHTmJYVrh | 2024-07-13 00:17:24 | 2024-07-13 00:17:24 |
|  8 |      19 | thread_e9167C8QFyC3H3K5T0g40kUQ | 2024-07-13 00:17:24 | 2024-07-13 00:17:24 |
|  9 |      19 | thread_vEAF2ut42ouFfm9bbuNXc0NQ | 2024-07-13 00:17:24 | 2024-07-13 00:17:24 |
| 10 |      19 | thread_nymKo2KVEM0fhxvs3HMx58J6 | 2024-07-13 00:17:24 | 2024-07-13 00:17:24 |
| 11 |      20 | thread_cVm02H98CLLpYnua4wdL6eIl | 2024-07-13 00:48:25 | 2024-07-13 00:48:25 |
| 12 |      20 | thread_Y1IJKwPhdsvEv5S3GfOQiEVO | 2024-07-13 00:48:25 | 2024-07-13 00:48:25 |
| 13 |      20 | thread_afRcKus6OTLjia3SnLtmJmyb | 2024-07-13 00:48:25 | 2024-07-13 00:48:25 |
| 14 |      20 | thread_LhSkUX4p60X1EPCFTugEeGFe | 2024-07-13 00:48:25 | 2024-07-13 00:48:25 |
| 15 |      20 | thread_q9cRXSWnCj0GXGEydvnWIp6e | 2024-07-13 00:48:25 | 2024-07-13 00:48:25 |
| 16 |      21 | thread_SONkyVjgcnAxk5adPRGagcfq | 2024-07-27 13:46:21 | 2024-07-27 13:46:21 |
+----+---------+---------------------------------+---------------------+---------------------+
16 rows in set (0.00 sec)
