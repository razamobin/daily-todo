services:
    mysql:
        build: ./mysql
        container_name: mysql
        environment:
            DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
            - ./mysql/conf.d:/etc/mysql/conf.d # Mount custom MySQL configuration
        networks:
            - todo-net

    golang-backend:
        build: ./golang-backend
        container_name: golang-backend
        ports:
            - "8080:8080"
        depends_on:
            - mysql
            - redis
        networks:
            - todo-net
        environment:
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - BEARER_TOKEN=${BEARER_TOKEN}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_NAME=${DB_NAME}

    python-backend:
        build: ./python-backend
        container_name: python-backend
        env_file:
            - .env
        ports:
            - "5001:5001"
        networks:
            - todo-net
        environment:
            - BEARER_TOKEN=${BEARER_TOKEN}

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile.dev
        container_name: frontend-app
        ports:
            - "3000:3000"
        volumes:
            - ./frontend:/app
            - /app/node_modules
        environment:
            - CHOKIDAR_USEPOLLING=true
        networks:
            - todo-net

    flyway:
        image: flyway/flyway
        entrypoint:
            [
                "flyway",
                "-url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true",
                "-user=${DB_USER}",
                "-password=${DB_PASSWORD}",
                "-baselineOnMigrate=true",
                "-locations=filesystem:/flyway/sql",
                "migrate",
            ]
        volumes:
            - ./migrations:/flyway/sql
        depends_on:
            - mysql
        networks:
            - todo-net

    redis:
        image: redis:7.2-alpine
        container_name: redis
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - todo-net
        environment:
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}

networks:
    todo-net:
        driver: bridge

volumes:
    mysql_data:
    redis_data:
